@model OrderModel.AddOrderProductModel.ProductDetailsModel
@using Nop.Core.Domain.Catalog

@{
    //page title
    ViewBag.Title = string.Format(T("Admin.Orders.Products.AddNew.Title2").Text, Model.Name, Model.OrderId);
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Orders");
}

@*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@

<form asp-controller="Order" asp-action="AddProductToOrderDetails" asp-route-orderId="@Model.OrderId"
      asp-route-productId="@Model.ProductId" enctype="multipart/form-data" method="post" id="product-details-form">

    <div asp-validation-summary="All"></div>

    <div class="content-header clearfix">
        <h1 class="pull-left">
            @string.Format(T("Admin.Orders.Products.AddNew.Title2").Text, Model.Name, Model.OrderId)
            <small>
                <i class="fa fa-arrow-circle-left"></i>
                <a asp-action="AddProductToOrder" asp-route-orderId="@Model.OrderId">@T("Admin.Orders.Products.AddNew.BackToList")</a>
            </small>
        </h1>
        <div class="pull-right">
            &nbsp;
        </div>
    </div>

    <div class="content">
        @if (Model.Warnings.Count > 0)
        {
            <div class="callout callout-danger">
                <ul>
                    @foreach (var warning in Model.Warnings)
                    {
                        <li>@warning</li>
                    }
                </ul>
            </div>
        }

        <div class="form-horizontal">
            <div class="panel-group">
                @if (Model.ProductType == ProductType.SimpleProduct)
                {
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="Sku" />
                                </div>
                                <div class="col-md-2">
                                    <b>@Model.Sku</b>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="Name" />
                                </div>
                                <div class="col-md-2">
                                    <b>@Model.Name</b>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="LinkProduct" />
                                </div>
                                <div class="col-md-2">
                                    <b>@Model.LinkProduct</b>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="ImageUrl" />
                                </div>
                                <div class="col-md-2">
                                    <img src="@Model.ImageUrl" width="100px" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="BaseUnitPrice" />
                                </div>
                                <div class="col-md-2">
                                    <nop-editor asp-for="BaseUnitPrice" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="CurrencyId" />
                                </div>
                                <div class="col-md-2">
                                    @{
                                        var currencies = Model.CurrencySelectorModel.AvailableCurrencies.Select(x => new SelectListItem
                                        {
                                            Text = x.Name,
                                            Value = x.Id.ToString(),
                                            Selected = x.Id.Equals(Model.CurrencyId)
                                        });
                                    }
                                    <select id="CurrencyId" name="CurrencyId" asp-items="@currencies" onchange="changeCurrency(this.value);"></select>

                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="ExchangeRate" />
                                </div>
                                <div class="col-md-2">
                                    @*<nop-editor asp-for="ExchangeRate" />*@
                                    <input type="text" class="form-control" name="ExchangeRate" id="ExchangeRate" value="@Model.ExchangeRate" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="OrderingFee" />
                                </div>
                                <div class="col-md-2">
                                    @*<nop-editor asp-for="OrderingFee" />*@
                                    <input type="text" class="form-control" name="OrderingFee" id="OrderingFee" value="@Model.OrderingFee" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="SaleOffPercent" />
                                </div>
                                <div class="col-md-2">
                                    @*<nop-editor asp-for="SaleOffPercent" />*@
                                    <input type="text" class="form-control" name="SaleOffPercent" id="SaleOffPercent" value="@Model.SaleOffPercent" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="Weight" />
                                </div>
                                <div class="col-md-2">
                                    <div> @(Model.Weight)</div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="WeightCost" />
                                </div>
                                <div class="col-md-2">
                                    <input type="text" class="form-control" name="WeightCost" id="WeightCost" value="@Model.WeightCost" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="Quantity" />
                                </div>
                                <div class="col-md-2">
                                    <input type="text" class="form-control" name="Quantity" id="Quantity" value="@Model.Quantity" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="UnitPriceInclTax" />
                                </div>
                                <div class="col-md-2">
                                    <input type="text" class="form-control" name="UnitPriceInclTax" id="UnitPriceInclTax" value="@Model.UnitPriceInclTax" />
                                </div>
                            </div>
                            <div class="form-group display-none">
                                <div class="col-md-3">
                                    <nop-label asp-for="UnitPriceExclTax" />
                                </div>
                                <div class="col-md-2">
                                    <input type="text" class="form-control" name="UnitPriceExclTax" id="UnitPriceExclTax" value="@Model.UnitPriceExclTax" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="SubTotalInclTax" />
                                </div>
                                <div class="col-md-2">
                                    <input type="text" class="form-control" name="SubTotalInclTax" id="SubTotalInclTax" value="@Model.SubTotalInclTax" />
                                </div>
                            </div>
                            <div class="form-group display-none">
                                <div class="col-md-3">
                                    <nop-label asp-for="SubTotalExclTax" />
                                </div>
                                <div class="col-md-2">
                                    <input type="text" class="form-control" name="SubTotalExclTax" id="SubTotalExclTax" value="@Model.SubTotalExclTax" />
                                </div>
                            </div>
                        </div>
                    </div>

                    var dataDict = new ViewDataDictionary(ViewData) { new KeyValuePair<string, object>("productId", Model.ProductId) };
                    @await Html.PartialAsync("_ProductAddAttributes", Model.ProductAttributes, dataDict)

                    var dataDictGiftCard = new ViewDataDictionary(ViewData);
                    dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = "giftcard";
                    @await Html.PartialAsync("_ProductAddGiftCardInfo", Model.GiftCard, dataDictGiftCard)

                    @await Html.PartialAsync("_ProductAddRentalInfo", Model)

                    <div class="panel panel-default">
                        <div class="panel-body">
                            @if (!Model.AutoUpdateOrderTotals)
                            {
                                <div class="form-group">
                                    <div class="col-md-2 col-md-offset-3">
                                        <p>
                                            <strong>@T("Admin.Orders.Products.AddNew.UpdateTotals")</strong>
                                        </p>
                                    </div>
                                </div>
                            }
                            <div class="form-group">
                                <div class="col-md-2 col-md-offset-3">
                                    <button id="btnSubmit" type="submit" class="btn btn-primary">
                                        @T("Admin.Orders.Products.AddNew")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else if (Model.ProductType == ProductType.GroupedProduct)
                {
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @*TODO add support for grouped products to be added to an existing order*@
                            Grouped products are not currently supported for adding to an existing order
                        </div>
                    </div>
                }
                else
                {
                    <div class="panel panel-default">
                        <div class="panel-body">
                            This product type (unknown) is not currently supported for adding to an existing order
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</form>
<script>
                                        $(document).ready(function() {

                                            $('#btnSubmit').on('click', function() {
                                                $('#product-details-form input[type="text"],#product-details-form input[type="number"]').map(function () {

                                                    var convertData = this.value.toFloat();
                                                    $(this).val(convertData);
                                                });
                                                $('#product-details-form').submit();
                                            });

                                            calculatePrice();
                                            formatCurrency();
                                        });

                                        function changeCurrency(data) {
                                            var postData = {
                                                currencyId: data
                                            };
                                            addAntiForgeryToken(postData);

                                            $.ajax({
                                                cache: false,
                                                type: 'POST',
                                                url: '@Url.Action("GetCurrencyById", "Currency")',
                                                data: postData,
                                                dataType: 'json',
                                                success: function(data) {
                                                    var currencyRate = (parseInt("@(Model.CurrencyCurrent.Rate)")/data.data.Rate).toFixed(4);
                                                    if (data.data.Id === parseInt('@Model.CurrencyId')) {
                                                        currencyRate = parseFloat('@Model.ExchangeRate');
                                                    }
                                                    $('#@Html.IdFor(model => model.ExchangeRate)').val(currencyRate);
                                                    calculatePrice();
                                                    formatCurrency();
                                                },
                                                failure: function() {

                                                }
                                            });
                                        }

                                        function calculatePrice() {
                                            var baseUnit = $('#@Html.IdFor(model => model.BaseUnitPrice)').val().toFloat();
                                            var exchangeRate = $('#@Html.IdFor(model => model.ExchangeRate)').val().toFloat();
                                            var feeship = $('#@Html.IdFor(model => model.OrderingFee)').val().toFloat();
                                            var saleoff = $('#@Html.IdFor(model => model.SaleOffPercent)').val().toFloat();
                                            var weightcost = $('#@Html.IdFor(model => model.WeightCost)').val().toFloat();
                                            var quantity = $('#@Html.IdFor(model => model.Quantity)').val().toFloat();

                                            var unitPriceVn = parseFloat((baseUnit * exchangeRate));
                                            $('#@Html.IdFor(model => model.UnitPriceInclTax)').val(unitPriceVn);
                                            $('#@Html.IdFor(model => model.UnitPriceExclTax)').val(unitPriceVn);

                                            if (weightcost > 0) {
                                                var totalItem = parseFloat((parseFloat((baseUnit * exchangeRate * quantity) * (parseFloat((100 - saleoff)) / 100)) + parseFloat(feeship) + parseFloat(weightcost)));

                                                $('#@Html.IdFor(model => model.SubTotalInclTax)').val(totalItem);
                                                $('#@Html.IdFor(model => model.SubTotalExclTax)').val(totalItem);
                                            } else {
                                                $('#@Html.IdFor(model => model.SubTotalInclTax)').val(0);
                                                $('#@Html.IdFor(model => model.SubTotalExclTax)').val(0);
                                            }

                                            formatCurrency();
                                        }

                                        function formatCurrency() {
                                            $('#product-details-form input[type="text"],#product-details-form input[type="number"]').map(function () {

                                                var formatCurrency = this.value.toFloat().format();
                                                $(this).val(formatCurrency);
                                            });
                                        }

                                        $('#product-details-form input[type="text"],#product-details-form input[type="number"]').change(function() {
                                            calculatePrice();
                                        });


</script>