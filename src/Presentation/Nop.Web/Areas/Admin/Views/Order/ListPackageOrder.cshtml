@model PackageOrderListModel

@inject AdminAreaSettings adminAreaSettings
@{
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Order.PackageOrders.Manage").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Order package");
}

<nop-antiforgery-token />
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Order.PackageOrders.Manage")
    </h1>
    <div class="pull-right">
        <a asp-action="CreatePackageOrder" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="Code" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="Code" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <nop-label asp-for="Name" />
                                </div>
                                <div class="col-md-8">
                                    <nop-editor asp-for="Name" />
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4">
                                    <button type="button" id="search-packageorders" class="btn btn-primary btn-search"><i class="fa fa-search"></i>@T("Admin.Common.Search")</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="packageorders-grid"></div>

                    <script type="text/javascript">
                        $(document).ready(function() {
                            $("#packageorders-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("ListPackageOrder", "Order"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: additionalData
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors"
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)],
                                    @await Html.PartialAsync("_GridPagerMessages")
                                },
                                editable: {
                                    confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                    mode: "inline"
                                },
                                //details grid
                                detailInit: detailInit,
                                scrollable: false,
                                columns: [
                                    {
                                        field: "PackageCode",
                                        title: "@T("Admin.Order.PackageOrders.Fields.PackageCode")",
                                        width: 150
                                    }, {
                                        field: "PackageName",
                                        title: "@T("Admin.Order.PackageOrders.Fields.PackageName")"
                                    }, {
                                        field: "ArrivalDatetime",
                                        title: "@T("Admin.Order.PackageOrders.Fields.ArrivalDatetime")",
                                        width: 150,
                                        type: "date",
                                        format: "{0:G}"
                                    }, {
                                        field: "PackageProcessedDatetime",
                                        title: "@T("Admin.Order.PackageOrders.Fields.PackageProcessedDatetime")",
                                        width: 200,
                                        type: "date",
                                        format: "{0:G}"
                                    }, {
                                        field: "IsShipped",
                                        title: "@T("Admin.Order.PackageOrders.Fields.IsShipped")",
                                        width: 150
                                    }, {
                                        field: "Id",
                                        title: "@T("Admin.Common.Edit")",
                                        width: 100,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '<a class="btn btn-default" href="EditPackageOrder/#=Id#"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a>'
                                    }
                                ]
                            });
                        });

                        //details grid
                        //details grid
                            function detailInit(e) {
                                $("<div/>").appendTo(e.detailCell).kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("OrderItemsByPackageId", "Order"))?packageId=" +
                                                    e.data.Id,
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            },
                                            update: {
                                                url: "@Html.Raw(Url.Action("UpdateOrderItem", "Order"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors",
                                            model: {
                                                id: "Id",
                                                fields: {
                                                    OrderId: { editable: false, type: "number" },
                                                    PackageId: { editable: true, type: "string" },
                                                    PackageOrderId: { editable: true, type: "string" },
                                                    PackageItemProcessedDatetime: { editable: true, type: "date" },
                                                    PictureThumbnailUrl: { editable: false, type: "string" },
                                                    ProductName: { editable: false, type: "string" },
                                                    TotalWithoutWeightCost: { editable: false, type: "string" },
                                                    WeightCost: { editable: false, type: "string" },
                                                    SubTotalInclTax: { editable: false, type: "string" }
                                                }
                                            }

                                        },
                                        requestEnd: function(e) {
                                            if (e.type == "update") {
                                                this.read();
                                            }
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        serverPaging: true,
                                        serverFiltering: true,
                                    },

                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "popup"
                                    },
                                    scrollable: false,
                                    pageable: {
                                        refresh: true,
                                        numeric: false,
                                        previousNext: false,
                                        info: false,
                                        @await Html.PartialAsync("_GridPagerMessages")
                                    },
                                    columns: [
                                        {
                                            field: "PictureThumbnailUrl",
                                            title: "@T("Admin.Orders.Products.Picture")",
                                            template: '<img src="#=PictureThumbnailUrl#" />',
                                            width: 100
                                        }, {
                                            field: "ProductName",
                                            title: "@T("Admin.Orders.Products.ProductName")",
                                            template: 'Product name: #=ProductName#' +
                                                '<p>#=AttributeInfo#</p>' +
                                                '<p>#=RecurringInfo#</p>',
                                            width: 250
                                        }, {
                                            field: "TotalWithoutWeightCost",
                                            title: "@T("Admin.Orders.Products.TotalWithoutWeightCost")",
                                            width: 100
                                        }, {
                                            field: "WeightCost",
                                            title: "@T("Admin.Orders.Products.WeightCost")",
                                            width: 100
                                        }, {
                                            field: "SubTotalInclTax",
                                            title: "@T("Admin.Orders.Products.Total")",
                                            width: 100
                                        }, {
                                            field: "PackageOrderId",
                                            title: "@T("Admin.Orders.Products.PackageOrderId")",
                                            width: 100,
                                            editor: editPackageOrderId,
                                            template: "# if (PackageOrder != null) { #" +
                                                "<p>#=PackageOrder.PackageCode# - #=PackageOrder.PackageName# </p>" +
                                                "#} else {#" +
                                                "<p>None</p>" +
                                                "# } #"

                                        }, {
                                            field: "PackageItemProcessedDatetime",
                                            title: "@T("Admin.Orders.Products.PackageItemProcessedDatetime")",
                                            width: 150,
                                            //format: "{0:G}",
                                            //type: "date",
                                            editor: dateTimeEditorCustom,
                                            template: "#= kendo.toString(kendo.parseDate(PackageItemProcessedDatetime, 'yyyy-MM-dd'), 'MM/dd/yyyy') #"
                                        }, {
                                            command: {
                                                name: "edit",
                                                text: {
                                                    edit: "@T("Admin.Common.Edit")",
                                                    update: "@T("Admin.Common.Update")",
                                                    cancel: "@T("Admin.Common.Cancel")"
                                                }
                                            },
                                            title: "@T("Admin.Common.Edit")",
                                            width: 150
                                        }
                                    ]
                                });
                            }

                            function dateTimeEditorCustom(container, options) {

                                $('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" />')
                                    .appendTo(container)
                                    .kendoDatePicker({
                                        value: kendo.toString(kendo.parseDate(options.model.PackageItemProcessedDatetime, 'yyyy-MM-dd'), 'MM/dd/yyyy')
                                    });
                            }
                            function editPackageOrderId(container, options) {
                            $('<input data-text-field="PackageOrderName" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" />')
                                .appendTo(container)
                                .kendoDropDownList({
                                    autoBind: false,
                                    dataTextField: "PackageOrderName",
                                    dataValueField: "PackageOrderId",
                                    dataSource: {
                                        type: "json",
                                        serverFiltering: true,
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("GetsPackageOrderAvailable", "Order"))",
                                                type: "GET",
                                                dataType: "json"
                                            }
                                        }
                                    }
                                });
                        }
                    </script>

                    <script type="text/javascript">

                        $(document).ready(function() {
                            //search button
                            $('#search-packageorders').click(function() {
                                //search
                                var grid = $('#packageorders-grid').data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                //grid.dataSource.read(); we already loaded the grid above using "page" function
                                return false;
                            });

                            $("#@Html.IdFor(model => model.Code)").keydown(function(event) {
                                if (event.keyCode == 13) {
                                    $("#search-packageorders").click();
                                    return false;
                                }
                            });
                        });

                        function additionalData() {
                            var data = {
                                Code: $('#@Html.IdFor(model => model.Code)').val(),
                                Name: $('#@Html.IdFor(model => model.Name)').val()
                            };
                            addAntiForgeryToken(data);
                            return data;
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>

@*import categories form*@
<div id="importexcel-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="importexcel-window-title">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="importexcel-window-title">@T("Admin.Common.ImportFromExcel")</h4>
            </div>
            <form asp-controller="Category" asp-action="ImportFromXlsx" method="post" enctype="multipart/form-data">
                <div class="form-horizontal">
                    <div class="modal-body">
                        <ul class="common-list">
                            <li>
                                <em>@T("Admin.Order.PackageOrders.List.ImportFromExcelTip")</em>
                            </li>
                            <li>
                                <em>@T("Admin.Common.ImportFromExcel.ManyRecordsWarning")</em>
                            </li>
                        </ul>
                        <div class="form-group">
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">
                                        @T("Admin.Common.ExcelFile")
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <input type="file" id="importexcelfile" name="importexcelfile" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            @T("Admin.Common.ImportFromExcel")
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>