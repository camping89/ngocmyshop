@model Nop.Web.Models.Catalog.ProductDetailsModel
@using Microsoft.AspNetCore.Http.Extensions
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Seo;
@{
    //Layout = "_AdminPopupLayout";
    Layout = null;
    var title = !string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name;
    ViewBag.Title = title;
    //title
    Html.AddTitleParts(title);
}

<form asp-controller="ShoppingCart" asp-action="AddProductToCart_Details" asp-route-shoppingCartTypeId="@((int) ShoppingCartType.ShoppingCart)" asp-route-activetab="tab-cart-info" asp-route-customerId="@Model.CustomerId" asp-route-productId="@Model.Id" asp-route-formId="@Context.Request.Query["formId"]" asp-route-btnId="@Context.Request.Query["btnId"]" method="post" id="product-details-form">

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-popup">
                    <div class="panel-body">
                        <div class="product-essential">
                            <div class="col-xs-3">
                                <!--product pictures-->
                                @await Html.PartialAsync("_ProductDetailsPictures", Model)
                            </div>
                            <div class="col-xs-9">
                                <div class="overview">
                                    <div class="product-name">
                                        <h1 itemprop="name">
                                            @Model.Name
                                        </h1>
                                    </div>
                                    @if (!string.IsNullOrEmpty(Model.ShortDescription))
                                    {
                                        <div class="short-description">
                                            @Html.Raw(Model.ShortDescription)
                                        </div>
                                    }
                                    @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_overview_top", additionalData = Model.Id })

                                    <div class="product-price">
                                        <strong><span class="price-value-@Model.Id title14 color">@(Model.ProductPrice.Price)</span><span>@Model.ProductPrice.CurrencyCode</span></strong>
                                        <input type="hidden" value="0" class="addtocart-adjust-@(Model.Id)" name="addtocart_@(Model.Id).adjustusd" />

                                    </div>
                                    <!--attributes-->
                                    @{
                                        var dataDictAttributes = new ViewDataDictionary(ViewData);
                                        dataDictAttributes.TemplateInfo.HtmlFieldPrefix = $"attributes_{Model.Id}";
                                        @await Html.PartialAsync("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
                                    }
                                    <!--gift card-->
                                    @{
                                        var dataDictGiftCard = new ViewDataDictionary(ViewData);
                                        dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = $"giftcard_{Model.Id}";
                                        @await Html.PartialAsync("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                                    }
                                    <!--rental info-->
                                    @{
                                        var dataDictRental = new ViewDataDictionary(ViewData);
                                        dataDictRental.TemplateInfo.HtmlFieldPrefix = $"rental_{Model.Id}";
                                        @await Html.PartialAsync("_RentalInfo", Model, dataDictRental)
                                    }
                                    <!--price & add to cart-->
                                    @{
                                        var dataDictAddToCart = new ViewDataDictionary(ViewData);
                                        dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                        @await Html.PartialAsync("_AddToCart", Model.AddToCart, dataDictAddToCart)
                                    }

                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</form>

<script>
    $('#product-details-form').submit(function(){
        $.ajax({
            url: $('#product-details-form').attr('action'),
            type: 'POST',
            data: $('#product-details-form').serialize(),
            complete: function (result) {
                if (result.responseJSON.Status === true) {
                    //Reload grid shopping cart
                    $("#productInfoModal").modal("toggle");
                    $('#order-edit a[href="#tab-cart-info"]').tab('show');
                    LoadCustomerCurrentCart(@Model.CustomerId);
                }
            }
        });
        return false;
    });
</script>