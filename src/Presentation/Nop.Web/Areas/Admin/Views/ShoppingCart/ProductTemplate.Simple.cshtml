@model Nop.Web.Models.Catalog.ProductDetailsModel
@using Microsoft.AspNetCore.Http.Extensions
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Seo;
@inject SeoSettings seoSettings
@{
    Layout = "_AdminPopupLayout";
    var title = !string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name;
    ViewBag.Title = title;
    //title
    Html.AddTitleParts(title);
}

@if (ViewBag.RefreshPage == true)
{
    <script type="text/javascript">
        try {
            window.opener.document.getElementById('setActiveTab').value = 'tab-cart-info';
            window.opener.document.getElementById('setUpdateOrder').value = true;
            window.opener.document.getElementById('@(Context.Request.Query["btnId"])').click();

        } catch (e) {
            console.log(e);
        }
        window.close();
    </script>
}
@{
    var addToCartText = "";
    if (Model.AddToCart.UpdatedShoppingCartItemId > 0 && Model.AddToCart.UpdateShoppingCartItemType.HasValue && Model.AddToCart.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
    {
        addToCartText = T("ShoppingCart.AddToCart.Update").Text;
    }
    else
    {
        addToCartText = T("ShoppingCart.AddToCart").Text;
        if (Model.IsRental)
        {
            addToCartText = T("ShoppingCart.Rent").Text;
        }
        if (Model.AddToCart.AvailableForPreOrder)
        {
            addToCartText = T("ShoppingCart.PreOrder").Text;
        }
    }
}
<form asp-controller="ShoppingCart" asp-action="AddProductToCart_Details" asp-route-shoppingCartTypeId="@((int) ShoppingCartType.ShoppingCart)" asp-route-activetab="tab-cart-info" asp-route-customerId="@Model.CustomerId" asp-route-productId="@Model.Id" asp-route-formId="@Context.Request.Query["formId"]" asp-route-btnId="@Context.Request.Query["btnId"]" method="post" id="product-details-form">
    <div class="content-header clearfix">

        @*<div class="pull-right">
                <button type="submit" name="save" class="btn bg-blue">
                    <i class="fa fa-shopping-cart"></i>
                    @addToCartText
                </button>
            </div>*@
    </div>
    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-popup">
                    <div class="panel-body">
                        <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                            <div class="product-essential">
                                <div class="col-xs-3">

                                    <!--product pictures-->
                                    @await Html.PartialAsync("_ProductDetailsPictures", Model)
                                </div>
                                <div class="col-xs-9">
                                    <div class="overview">
                                        <div class="product-name">
                                            <h1 itemprop="name">
                                                @Model.Name
                                            </h1>
                                        </div>
                                        @if (!string.IsNullOrEmpty(Model.ShortDescription))
                                        {
                                            <div class="short-description">
                                                @Html.Raw(Model.ShortDescription)
                                            </div>
                                        }
                                        @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_overview_top", additionalData = Model.Id })
                                        @*<!--product reviews-->
                                            @await Html.PartialAsync("_ProductReviewOverview", Model.ProductReviewOverview)
                                            <!--availability-->
                                            @await Html.PartialAsync("_Availability", Model)
                                            <!--SKU, MAN, GTIN, vendor-->
                                            @await Html.PartialAsync("_SKU_Man_GTIN_Ven", Model)
                                            <!--delivery-->
                                            @await Html.PartialAsync("_DeliveryInfo", Model)
                                            <!--sample download-->
                                            @await Html.PartialAsync("_DownloadSample", Model)*@

                                        <div class="product-price">
                                            <ins><span class="price-value-@Model.Id title14 color">@(Model.ProductPrice.Price)</span><span>@Model.ProductPrice.CurrencyCode</span></ins>
                                            <input type="hidden" value="0" class="addtocart-adjust-@(Model.Id)" name="addtocart_@(Model.Id).adjustusd" />

                                        </div>
                                        <!--attributes-->
                                        @{
                                            var dataDictAttributes = new ViewDataDictionary(ViewData);
                                            dataDictAttributes.TemplateInfo.HtmlFieldPrefix = $"attributes_{Model.Id}";
                                            @await Html.PartialAsync("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
                                        }
                                        <!--gift card-->
                                        @{
                                            var dataDictGiftCard = new ViewDataDictionary(ViewData);
                                            dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = $"giftcard_{Model.Id}";
                                            @await Html.PartialAsync("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                                        }
                                        <!--rental info-->
                                        @{
                                            var dataDictRental = new ViewDataDictionary(ViewData);
                                            dataDictRental.TemplateInfo.HtmlFieldPrefix = $"rental_{Model.Id}";
                                            @await Html.PartialAsync("_RentalInfo", Model, dataDictRental)
                                        }
                                        <!--price & add to cart-->
                                        @{
                                            @*var dataDictPrice = new ViewDataDictionary(ViewData);
                                                dataDictPrice.TemplateInfo.HtmlFieldPrefix = $"price_{Model.Id}";
                                                @await Html.PartialAsync("_ProductPrice", Model.ProductPrice, dataDictPrice)

                                                @await Html.PartialAsync("_ProductTierPrices", Model.TierPrices)*@

                                            var dataDictAddToCart = new ViewDataDictionary(ViewData);
                                            dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                            @await Html.PartialAsync("_AddToCart", Model.AddToCart, dataDictAddToCart)
                                        }

                                    </div>
                                </div>

                                @*@if (!string.IsNullOrEmpty(Model.FullDescription))
                                    {
                                        <div class="full-description" itemprop="description">
                                            @Html.Raw(Model.FullDescription)
                                        </div>
                                    }*@
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</form>